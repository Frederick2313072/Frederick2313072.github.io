[{"content":"很早的时候，一直觉得20岁似乎遥不可及，但当这一天真的即将来临时，却总是令人焦灼不安，无法入眠。我无法说清这种不安到底是来自我在异乡脚下的那种不踏实感，还是对于自己少年碌碌无为的失落，好消息是，在历经大一一年的迷茫后，似乎隐隐地知道了自己未来该干什么，坏消息是，这些在高考毕业后并没有人告诉我，当时单纯的认为，一张试卷将决定我的一生，我并不后悔我选择了统计专业（大三分流大概率是数据科学），只是痛恨在性压抑的教育里没有接触知识的多维度，重新回到填志愿那一晚，或许我会更加慎重考虑到底选网安，软件开发，还是数据科学，然后做出更坚定的决定投身于Deep Learning，Machine Learning，AI领域，以最纯粹最崇拜的目光看向各位科研院士\u0026hellip;\u0026hellip;但这些不过是幻想，到现在都还在怀疑自己是否适合科研。如很多人所说，大学对于很多人而言是这辈子最难忘也最无忧无虑的四年，我们可以有很多的试错机会，可以尝试很多自己想做的事情，也有很多空闲时间在知识的海洋里遨游。如知乎一位数学博士所说，中国的孩子自一出生就在冲刺，从双语幼儿园到重点高中，再经理千军万马过独木桥的高考。在人类前半生的这场性爱过程中，他们做足了前戏，也做了太久前戏，而这一切都在上大学时完成了痛快的射精，仿佛所有分泌的前列腺液都是值得的；于我而言，我对NKU的喜爱大抵来源于此，我可以有大把时间去花在我喜爱的CS领域，我实在想不出还有什么比CS更好的学科了，计算机就是21世纪魔法，所谓追求乌托邦，讨论后现代主义只不过是自我没有找到栖息地暂时的庇护所罢了，当然对于理解这个社会，这个世界的全貌还是有必要的，在学cs时，其实你能隐隐感觉到有一些东西是互通的，背后是有个共同范式存在的，比如学数据库时学到触发器这个概念就联想到平时用的vscode一些插件，如Prettier，可能是加了click之类键盘输入触发条件\u0026hellip;而我对于统院的怨恨大抵来源于人与人之间的战争，，每个人都要争取保研，都看对方不顺眼（所以请狠狠鄙视那些不愿意分享学习资源的同学），说是统计学院，实际上大部分人都在卷纸面上的知识导致技能栈的扁平化，想做大创在学院里实在找不到在coding方面说得过去以至于到软件学院捞人，说到底还是自己太菜的道理，如果自己够强，而是会想如何带别人，但这估计又是很多年后的故事了。\n","date":"2024-12-05T00:00:00Z","image":"https://Frederick2313072.github.io/p/20%E5%B2%81%E4%BA%86%E8%AF%B4%E7%82%B9%E4%BB%80%E4%B9%88/547a6a87146ee7bd92f1c1efdf2458045e2f600d_hu5596276418357378468.jpg","permalink":"https://Frederick2313072.github.io/p/20%E5%B2%81%E4%BA%86%E8%AF%B4%E7%82%B9%E4%BB%80%E4%B9%88/","title":"20岁了，说点什么"},{"content":" 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 SELECT RTRIM(vend_name) + \u0026#39;(\u0026#39;+ --右边取消空格 RTRIM(vend_country) + \u0026#39;)\u0026#39; AS vend_title From Vendors ORDER BY vend_name; SELECT prod_id,quantity,item_price,quantity*item_price AS expanded_price FROM OrderItems; SELECT vend_name,UPPER(vend_name) --大写 AS vend_name_upcase FROM Vendors ORDER BY vend_name; SELECT cust_name,cust_contact FROM Customers WHERE SOUNDEX(cust_contact) = SOUNDEX(\u0026#39;Michael Green\u0026#39;); --近似发音 SELECT order_num FROM Orders WHERE DATEPART(yy,order_date) = 2020; SELECT AVG(prod_price) AS avg_price --取平均值 FROM Products WHERE vend_id = \u0026#39;DLL01\u0026#39;; SELECT COUNT(*)AS num_cust --对所有行计数 FROM Customers; SELECT MAX(prod_price) AS max_price FROM Products; SELECT SUM(quantity*item_price) AS items_ordered FROM OrderItems WHERE order_num = 20005; SELECT AVG(DISTINCT prod_price) AS avg_price FROM Products Where vend_id =\u0026#39;DLL01\u0026#39;; SELECT COUNT(*) AS num_items,MIN(prod_price) AS price_min,MAX(prod_price) AS proce_max,AVG(prod_price) AS price_avg --组合聚集函数 FROM products; SELECT vend_id,COUNT(*) AS num_prods FROM Products Group BY vend_id HAVING COUNT(*) \u0026gt;= 2;--过滤分组，group by 和 having结合 SELECT order_num,COUNT(*)AS items FROM OrderItems Group BY order_num HAVING COUNT(*) \u0026gt;= 3--检索包含三个或更多物品的订单号和订购物品的数目 ORDER BY items,order_num;--按订购物品的数目排序输出，having在group by前，order by后 SELECT cust_id FROM OrderItems WHERE prod_id = \u0026#39;RGAN01\u0026#39;; SELECT cust_id FROM Orders WHERE order_num IN (20007,20008); SELECT cust_id FROM Orders WHERE order_num IN (SELECT cust_id FROM Orders WHERE order_num IN (20007,20008));--建立以上的子查询，由内向外 SELECT cust_name,cust_state,(SELECT COUNT(*)FROM Orders WHERE Orders.cust_id=Customers.cust_id) AS orders --子查询对检索出的每个顾客执行一次，用句点避免混淆列名 FROM Customers ORDER BY cust_name;--对于检索出的每个顾客，统计其在Orders表中的订单数目 SELECT vend_name,prod_name,prod_price FROM Vendors,Products WHERE Vendors.vend_id = Products.vend_id; BEGIN TRANSACTION DELETE OrderItems WHERE order_num =12345 SAVE TRANSACTION delete1;--使用保留点delete1，保留点越多越好，额能进行灵活的回退 DELETE Orders WHERE order_num =12345 ROLLBACK TRANSACTION delete1;--回退到保留点delete1 COMMIT TRANSACTION--控制事物处理，最后的commit仅在中间过程不出错的情况下写出更改 BEGIN TRANSACTION DELETE OrderItems WHERE order_num =12345 SAVE TRANSACTION delete1;--使用保留点delete1，保留点越多越好，额能进行灵活的回退 DELETE Orders WHERE order_num =12345 ROLLBACK TRANSACTION delete1;--回退到保留点delete1 COMMIT TRANSACTION--控制事物处理，最后的commit仅在中间过程不出错的情况下写出更改 DECLARE CURSOR CustCursor IS SELECT * FROM Customers WHERE cust_email IS NULL; ALTER TABLE Vendors ADD CONSTRAINT PRIMARY KEY(vend_id)--设置主键，DBMS默认主键基本不修改或更新，不能重用 ALTER TABLE Orders ADD CONSTRAINT FOREIGN KEY (cust_id) REFERENCES Customers(cust_id);--将此表中的cust_id设置为Customers的主键，即外键。外键有助防止意外删除，若删除，级联删除 CREATE INDEX prod_name_ind--索引名 ON Products(prod_name)--被索引的表，列 CREATE TRIGGER customer_state ON Customers FOR INSERT,UPDATE AS UPDATE Customers SET cust_state=Upper(cust_state) WHERE Customers.cust_id = inserted.cust_id;--创建一个触发器，对所有INSERT和UPDATE操作，将cust_state转为大写 ","date":"2024-12-05T00:00:00Z","permalink":"https://Frederick2313072.github.io/p/sql%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A%E4%BE%8B%E5%AD%90/","title":"SQL必知必会例子"},{"content":"Python 爬虫 建模 数据挖掘（统计方向的待定） JS 做个代办事项列表（我所能想到JS对我的唯一用处就是网页加个响应什么的）\n重新巩固C语言 Unity 学习C#语言，可能大创写个游戏，或者跟之前联系好的设计系朋友写着玩玩\nLeetcode 刷题周赛 算法与数据结构 算是提前预习大三内容，以及体验下朋友所说的算法addiction\n","date":"2024-12-02T00:00:00Z","image":"https://Frederick2313072.github.io/p/plan-after-this-semester/%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20241202170215_hu9892375508239660670.jpg","permalink":"https://Frederick2313072.github.io/p/plan-after-this-semester/","title":"Plan after this semester"},{"content":"Python 基础语法到面向对象编程，小项目只用过pygame写了一个窗口射击游戏，图灵系列那本python编程学的很流畅，很快能上手项目\nJavascript 到现在只学了点皮毛，只会做动态内容更新，也只是自己做html网页时乱加上去的\nLinux 一开始甚至打算买个电脑重装Linux，看到无数人因为Linux整个大学没敲几行代码被劝退了，最后只学了Bash，但是和windows的shell不兼容，用的乌班图版本，以下是我试过的所有办法：\n虚拟盘开机和Windows双系统 虚拟机如virtualbox和Vmware（据说可以申请阿里云学生服务器，但我用的前者） Windows自带wsl，最后自己搞了个图形化界面，甚至现在偶尔还在用 工具 Vim：很容易上手，但不常用就会很快忘了（谁没事会在shell里面编辑文本） Nano：可读性比Vim强，但我已经习惯Vim了 SSH Docker Git：最重要的一个，不用多说 数据库 学校课程，但反而很不上心，明天开始重学\nCS常识 b站有个做的很好的科普视频，会放在Resource里面\nHtml 严格来说，太简单算不上编程语言\nCSS 之前自己做了个CSS模板，结果在运行cmd时被tailwind覆盖完了，没有git到远程仓库\u0026hellip;\u0026hellip;\n数学分析3，概率论 前者太难听不懂，后者太简单不想听\n","date":"2024-12-02T00:00:00Z","image":"https://Frederick2313072.github.io/p/summary-in-november/%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20241202225640_hu15903600476363975967.jpg","permalink":"https://Frederick2313072.github.io/p/summary-in-november/","title":"Summary in November"}]