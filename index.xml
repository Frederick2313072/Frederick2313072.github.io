<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Frederick</title>
    <link>https://Frederick2313072.github.io/</link>
    <description>Recent content on Frederick</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <atom:link href="https://Frederick2313072.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>大二下学期总结</title>
      <link>https://Frederick2313072.github.io/blog/2025-06-25-%E5%A4%A7%E4%BA%8C%E4%B8%8B%E5%AD%A6%E6%9C%9F%E6%80%BB%E7%BB%93/</link>
      <pubDate>Wed, 25 Jun 2025 00:00:00 +0000</pubDate>
      <guid>https://Frederick2313072.github.io/blog/2025-06-25-%E5%A4%A7%E4%BA%8C%E4%B8%8B%E5%AD%A6%E6%9C%9F%E6%80%BB%E7%BB%93/</guid>
      <description>&lt;p&gt;其实21号就考完试了，早就想开始动笔写点学期总结了，但碍于各种原因一直没能动笔，这学期放下心态对很多东西反而祛魅了，对技术的追求反而没有了开始的兴奋，原本幻想的发一作，大厂实习没有多少推进，面试了很多但止于背八股文和算法，被某实验室的mentor放鸽子，实验室工作也没什么推进，绩点爆炸，看了很多教程但一知半解，盲手搓是不会的，只会各种vibe coding技巧，好在暑假找了另一个科研实习岗，adventurex通过了审核（很快一周不到就过了？）竞赛也拿了牌子（水的），开始期待7月。&lt;/p&gt;</description>
    </item>
    <item>
      <title>NLP总结</title>
      <link>https://Frederick2313072.github.io/blog/2025-05-27-nlp%E6%80%BB%E7%BB%93/</link>
      <pubDate>Tue, 27 May 2025 00:00:00 +0000</pubDate>
      <guid>https://Frederick2313072.github.io/blog/2025-05-27-nlp%E6%80%BB%E7%BB%93/</guid>
      <description>&lt;h2 id=&#34;word-embedding&#34;&gt;Word Embedding&lt;/h2&gt;&#xA;&lt;h3 id=&#34;one-hot表示&#34;&gt;One-hot表示&lt;/h3&gt;&#xA;&lt;p&gt;One-hot简称读热向量编码，也是特征工程中最常用的方法。其步骤如下：&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;构造文本分词后的字典，每个分词是一个比特值，比特值为0或者1。&lt;/li&gt;&#xA;&lt;li&gt;每个分词的文本表示为该分词的比特位为1，其余位为0的矩阵表示。&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;每个词典索引对应比特位&lt;/p&gt;</description>
    </item>
    <item>
      <title>DL常见算法及模型</title>
      <link>https://Frederick2313072.github.io/blog/2025-05-26-dl%E5%B8%B8%E8%A7%81%E7%AE%97%E6%B3%95%E5%8F%8A%E6%A8%A1%E5%9E%8B/</link>
      <pubDate>Mon, 26 May 2025 00:00:00 +0000</pubDate>
      <guid>https://Frederick2313072.github.io/blog/2025-05-26-dl%E5%B8%B8%E8%A7%81%E7%AE%97%E6%B3%95%E5%8F%8A%E6%A8%A1%E5%9E%8B/</guid>
      <description>&lt;h2 id=&#34;cnn&#34;&gt;CNN&lt;/h2&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;CNN层次结构&lt;/th&gt;&#xA;          &lt;th&gt;作用&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;输入层&lt;/td&gt;&#xA;          &lt;td&gt;卷积网络的原始输入，可以是原始或预处理后的像素矩阵&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;卷积层&lt;/td&gt;&#xA;          &lt;td&gt;参数共享、局部连接，利用平移不变性从全局特征图提取局部特征&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;激活层&lt;/td&gt;&#xA;          &lt;td&gt;将卷积层的输出结果进行非线性映射&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;池化层&lt;/td&gt;&#xA;          &lt;td&gt;进一步筛选特征，可以有效减少后续网络层次所需的参数量&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;全连接层&lt;/td&gt;&#xA;          &lt;td&gt;用于把该层之前提取到的特征综合起来。&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h3 id=&#34;11-输入层&#34;&gt;1.1 输入层&lt;/h3&gt;&#xA;&lt;p&gt;在做输入的时候，需要把图片处理成同样大小的图片才能够进行处理。&lt;/p&gt;</description>
    </item>
    <item>
      <title>强化学习</title>
      <link>https://Frederick2313072.github.io/blog/2025-05-25-%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0/</link>
      <pubDate>Sun, 25 May 2025 00:00:00 +0000</pubDate>
      <guid>https://Frederick2313072.github.io/blog/2025-05-25-%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0/</guid>
      <description>&lt;p&gt;强化学习算法分两种，（工作A）一种是预测每个状态的价值V，（工作B）一种是预测在每个状态下，所有可能出现的动作的价值（动作价值Q）&lt;/p&gt;&#xA;&lt;h2 id=&#34;mc蒙特卡洛算法&#34;&gt;MC蒙特卡洛算法&lt;/h2&gt;&#xA;&lt;p&gt;完成A工作，增量更新，需要收集很多样本数据来参加训练，预测每个状态的价值&lt;/p&gt;</description>
    </item>
    <item>
      <title>NLP for beginners</title>
      <link>https://Frederick2313072.github.io/blog/2025-05-24-nlp-for-beginners/</link>
      <pubDate>Sat, 24 May 2025 00:00:00 +0000</pubDate>
      <guid>https://Frederick2313072.github.io/blog/2025-05-24-nlp-for-beginners/</guid>
      <description>&lt;h3 id=&#34;分词&#34;&gt;分词&lt;/h3&gt;&#xA;&lt;p&gt;深度学习模型期望数字作为输入，而不是英语句子！所以我们需要做两件事：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;em&gt;Tokenization&lt;/em&gt;: Split each text up into words (or actually, as we&amp;rsquo;ll see, into &lt;em&gt;tokens&lt;/em&gt;)&#xA;分词：将每段文本分割成单词（或者，实际上，我们会看到，分割成标记）&lt;/li&gt;&#xA;&lt;li&gt;&lt;em&gt;Numericalization&lt;/em&gt;: Convert each word (or token) into a number.&#xA;数字化：将每个单词（或标记）转换为一个数字。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;from datasets import Dataset,DatasetDict&#xA;&#xA;ds = Dataset.from_pandas(df)&#xA;#选择模型&#xA;model_nm = &amp;#39;microsoft/deberta-v3-small&amp;#39;&#xA;#分词&#xA;from transformers import AutoModelForSequenceClassification,AutoTokenizer&#xA;tokz = AutoTokenizer.from_pretrained(model_nm)&#xA;def tok_func(x): return tokz(x[&amp;#34;input&amp;#34;])&#xA;tok_ds = ds.map(tok_func, batched=True)&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;分词器中有一个名为 &lt;code&gt;vocab&lt;/code&gt; 的列表，其中包含每个可能的标记字符串的唯一整数。我们可以这样查找它们，例如，为了找到单词&amp;quot;of&amp;quot;的标记：&lt;/p&gt;</description>
    </item>
    <item>
      <title>算法八股文常见问题</title>
      <link>https://Frederick2313072.github.io/blog/2025-05-19-%E7%AE%97%E6%B3%95%E5%85%AB%E8%82%A1%E6%96%87%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98/</link>
      <pubDate>Mon, 19 May 2025 00:00:00 +0000</pubDate>
      <guid>https://Frederick2313072.github.io/blog/2025-05-19-%E7%AE%97%E6%B3%95%E5%85%AB%E8%82%A1%E6%96%87%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98/</guid>
      <description>&lt;p&gt;**1.**目前主流的开源模型体系有哪些？&lt;/p&gt;&#xA;&lt;p&gt;目前主流的开源LLM（语言模型）模型体系包括以下几个：&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;strong&gt;GPT（Generative Pre-trained Transformer）系列&lt;/strong&gt;：由OpenAI发布的一系列基于Transformer架构的语言模型，包括GPT、GPT-2、GPT-3等。GPT模型通过在大规模无标签文本上进行预训练，然后在特定任务上进行微调，具有很强的生成能力和语言理解能力。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;BERT（Bidirectional Encoder Representations from Transformers）&lt;/strong&gt;：由Google发布的一种基于Transformer架构的双向预训练语言模型。BERT模型通过在大规模无标签文本上进行预训练，然后在下游任务上进行微调，具有强大的语言理解能力和表征能力。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;XLNet&lt;/strong&gt;：由CMU和Google Brain发布的一种基于Transformer架构的自回归预训练语言模型。XLNet模型通过自回归方式预训练，可以建模全局依赖关系，具有更好的语言建模能力和生成能力。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;RoBERTa&lt;/strong&gt;：由Facebook发布的一种基于Transformer架构的预训练语言模型。RoBERTa模型在BERT的基础上进行了改进，通过更大规模的数据和更长的训练时间，取得了更好的性能。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;T5（Text-to-Text Transfer Transformer）&lt;/strong&gt;：由Google发布的一种基于Transformer架构的多任务预训练语言模型。T5模型通过在大规模数据集上进行预训练，可以用于多种自然语言处理任务，如文本分类、机器翻译、问答等。&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;这些模型在自然语言处理领域取得了显著的成果，并被广泛应用于各种任务和应用中。&lt;/p&gt;</description>
    </item>
    <item>
      <title>算法岗手撕代码</title>
      <link>https://Frederick2313072.github.io/blog/2025-05-19-%E7%AE%97%E6%B3%95%E5%B2%97%E6%89%8B%E6%92%95%E4%BB%A3%E7%A0%81/</link>
      <pubDate>Mon, 19 May 2025 00:00:00 +0000</pubDate>
      <guid>https://Frederick2313072.github.io/blog/2025-05-19-%E7%AE%97%E6%B3%95%E5%B2%97%E6%89%8B%E6%92%95%E4%BB%A3%E7%A0%81/</guid>
      <description>&lt;ul&gt;&#xA;&lt;li&gt;随机梯度下降&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;# 数据加载&#xA;&#xA;from sklearn.datasets import fetch_california_housing&#xA;from sklearn.model_selection import train_test_split&#xA;&#xA;X, Y = fetch_california_housing(return_X_y=True)&#xA;X.shape, Y.shape&#x9;# (20640, 8), (20640, )&#xA;&#xA;# 数据预处理&#xA;&#xA;ones = np.ones(shape=(X.shape[0], 1))&#xA;X = np.hstack([X, ones])&#xA;validate_size = 0.2&#xA;X_train, X_test, Y_train, Y_test = train_test_split(X, Y, test_size=validate_size, shuffle=True)&#xA;&#xA;# batch 函数&#xA;&#xA;def get_batch(batchsize: int, X: np.ndarray, Y: np.ndarray):&#xA;    assert 0 == X.shape[0]%batchsize, f&amp;#39;{X.shape[0]}%{batchsize} != 0&amp;#39;&#xA;    batchnum = X.shape[0]//batchsize&#xA;    X_new = X.reshape((batchnum, batchsize, X.shape[1]))&#xA;    Y_new = Y.reshape((batchnum, batchsize, ))&#xA;&#xA;    for i in range(batchnum):&#xA;        yield X_new[i, :, :], Y_new[i, :]&#xA;&#xA;# 损失函数&#xA;&#xA;def mse(X: np.ndarray, Y: np.ndarray, W: np.ndarray):&#xA;    return 0.5 * np.mean(np.square(X@W-Y))&#xA;&#xA;def diff_mse(X: np.ndarray, Y: np.ndarray, W: np.ndarray):&#xA;    return X.T@(X@W-Y) / X.shape[0]&#xA;&#xA;# 模型训练&#xA;&#xA;lr = 0.001          # 学习率&#xA;num_epochs = 1000   # 训练周期&#xA;batch_size = 64     # |每个batch包含的样本数&#xA;validate_every = 4  # 多少个周期进行一次检验&#xA;def train(num_epochs: int, batch_size: int, validate_every: int, W0: np.ndarray, X_train: np.ndarray, Y_train: np.ndarray, X_test: np.ndarray, Y_test: np.ndarray):&#xA;    loop = tqdm(range(num_epochs))&#xA;    loss_train = []&#xA;    loss_validate = []&#xA;    W = W0&#xA;    # 遍历epoch&#xA;    for epoch in loop:&#xA;        loss_train_epoch = 0&#xA;        # 遍历batch&#xA;        for x_batch, y_batch in get_batch(64, X_train, Y_train):&#xA;            loss_batch = mse(X=x_batch, Y=y_batch, W=W)&#xA;            loss_train_epoch += loss_batch*x_batch.shape[0]/X_train.shape[0]&#xA;            grad = diff_mse(X=x_batch, Y=y_batch, W=W)&#xA;            W = W - lr*grad&#xA;&#xA;        loss_train.append(loss_train_epoch)&#xA;        loop.set_description(f&amp;#39;Epoch: {epoch}, loss: {loss_train_epoch}&amp;#39;)&#xA;    &#xA;        if 0 == epoch%validate_every:&#xA;            loss_validate_epoch = mse(X=X_test, Y=Y_test, W=W)&#xA;            loss_validate.append(loss_validate_epoch)&#xA;            print(&amp;#39;============Validate=============&amp;#39;)&#xA;            print(f&amp;#39;Epoch: {epoch}, train loss: {loss_train_epoch}, val loss: {loss_validate_epoch}&amp;#39;)&#xA;            print(&amp;#39;================================&amp;#39;)&#xA;    plot_loss(np.array(loss_train), np.array(loss_validate), validate_every)&#xA;&#xA;# 程序运行&#xA;&#xA;W0 = np.random.random(size=(X.shape[1], ))  # 初始权重&#xA;train(num_epochs=num_epochs, batch_size=batch_size, validate_every=validate_every, W0=W0, X_train=X_train, Y_train=Y_train, X_test=X_test, Y_test=Y_test)&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;&#xA;&lt;li&gt;BP法&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;BP算法就是反向传播，要输入的数据经过一个前向传播会得到一个输出，但是由于权重的原因，所以其输出会和你想要的输出有差距，这个时候就需要进行反向传播，利用梯度下降，对所有的权重进行更新，这样的话在进行前向传播就会发现其输出和你想要的输出越来越接近了。&lt;/p&gt;</description>
    </item>
    <item>
      <title>随便聊聊对于技术的看法</title>
      <link>https://Frederick2313072.github.io/blog/2025-05-13-%E9%9A%8F%E4%BE%BF%E8%81%8A%E8%81%8A%E5%AF%B9%E4%BA%8E%E6%8A%80%E6%9C%AF%E7%9A%84%E7%9C%8B%E6%B3%95/</link>
      <pubDate>Tue, 13 May 2025 00:00:00 +0000</pubDate>
      <guid>https://Frederick2313072.github.io/blog/2025-05-13-%E9%9A%8F%E4%BE%BF%E8%81%8A%E8%81%8A%E5%AF%B9%E4%BA%8E%E6%8A%80%E6%9C%AF%E7%9A%84%E7%9C%8B%E6%B3%95/</guid>
      <description>&lt;p&gt;近期在投一些实习岗位，越来越觉得很多HR猎头其实并不知道自己公司想要什么人，他们不会去看你复现过什么论文，项目代码结构，以及行业的匹配度，在找大模型算法岗位结果上来很多问你来不来开发运维岗的，5月份暑期hc没几个了甚至秋招提前批都开始了，但有些厂频频找上门总给人营造一种门庭若市的假象，这些事情总是让我很疲惫，我开始怀念大一单纯写数学题的日子。事实上，只要把CV包装下基本都解决了，感觉小廖帮我修改的简历。&lt;/p&gt;</description>
    </item>
    <item>
      <title>吴恩达机器学习</title>
      <link>https://Frederick2313072.github.io/blog/2025-04-23-%E5%90%B4%E6%81%A9%E8%BE%BE%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/</link>
      <pubDate>Wed, 23 Apr 2025 00:00:00 +0000</pubDate>
      <guid>https://Frederick2313072.github.io/blog/2025-04-23-%E5%90%B4%E6%81%A9%E8%BE%BE%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/</guid>
      <description>&lt;h2 id=&#34;监督学习&#34;&gt;监督学习&lt;/h2&gt;&#xA;&lt;p&gt;回归算法：从可能的数字中预测算法，学习算法提供例子，xy映射&lt;/p&gt;&#xA;&lt;p&gt;分类算法：拟合边界线，分辨哪个type&lt;/p&gt;&#xA;&lt;h2 id=&#34;无监督学习&#34;&gt;无监督学习&lt;/h2&gt;&#xA;&lt;p&gt;聚类算法：获取没有标签的数据并尝试自己将他们分组到集群中，只是分类                 ···&lt;/p&gt;</description>
    </item>
    <item>
      <title>数据结构与算法概念</title>
      <link>https://Frederick2313072.github.io/blog/2025-04-12-%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E6%A6%82%E5%BF%B5/</link>
      <pubDate>Sat, 12 Apr 2025 00:00:00 +0000</pubDate>
      <guid>https://Frederick2313072.github.io/blog/2025-04-12-%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E6%A6%82%E5%BF%B5/</guid>
      <description>&lt;p&gt;逻辑结构：线性结构，树形结构，图形结构&lt;/p&gt;&#xA;&lt;p&gt;线性数据结构：线性数据结构是指数据元素之间存在一对一的线性关系的数据结构。常见的线性数据结构包括数组、广义表，链表、栈和队列&lt;/p&gt;</description>
    </item>
    <item>
      <title>计算机系统层次结构</title>
      <link>https://Frederick2313072.github.io/blog/2025-04-08-%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%E5%B1%82%E6%AC%A1%E7%BB%93%E6%9E%84/</link>
      <pubDate>Tue, 08 Apr 2025 00:00:00 +0000</pubDate>
      <guid>https://Frederick2313072.github.io/blog/2025-04-08-%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%E5%B1%82%E6%AC%A1%E7%BB%93%E6%9E%84/</guid>
      <description>&lt;p&gt;核心：计算&lt;/p&gt;&#xA;&lt;p&gt;五大功能部件：输入设备，运算器，存储器，控制器，输出设备。运作方式？&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;存储器：外存（磁盘存储器），内存优缺点？&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;容量大，断电后依然可以保存数据，无法直接从其中取数据用，必须把数据调入内存后才能使用，访问速度慢；&lt;/p&gt;</description>
    </item>
    <item>
      <title>OS</title>
      <link>https://Frederick2313072.github.io/blog/2025-04-05-os/</link>
      <pubDate>Sat, 05 Apr 2025 00:00:00 +0000</pubDate>
      <guid>https://Frederick2313072.github.io/blog/2025-04-05-os/</guid>
      <description>&lt;p&gt;引导程序：当计算机开机运行时，需要运行一个初始程序，位于计算机的固件，如只读内存ROM，将操作系用内核加载到内存中，除了内核外，一些服务也会在启动时加到内存成为系统程序或后台，一旦完成，系统完全启动，等待事件发生（如触发一个软件）&lt;/p&gt;</description>
    </item>
    <item>
      <title>一些对于C&#43;&#43;的思考</title>
      <link>https://Frederick2313072.github.io/blog/2025-03-30-%E4%B8%80%E4%BA%9B%E5%AF%B9%E4%BA%8Ec-%E7%9A%84%E6%80%9D%E8%80%83/</link>
      <pubDate>Sun, 30 Mar 2025 00:00:00 +0000</pubDate>
      <guid>https://Frederick2313072.github.io/blog/2025-03-30-%E4%B8%80%E4%BA%9B%E5%AF%B9%E4%BA%8Ec-%E7%9A%84%E6%80%9D%E8%80%83/</guid>
      <description>&lt;ul&gt;&#xA;&lt;li&gt;static和extern区别？&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;外部是可见性关键词，内部是所有实例共享static的变量，静态类成员变量属于全体实例，所以任意实例不能给静态变量分配内存，要用类使用变量，static让被修饰的语句具有唯一性，确定性&lt;/p&gt;</description>
    </item>
    <item>
      <title>常用板子</title>
      <link>https://Frederick2313072.github.io/blog/2025-03-25-%E5%B8%B8%E7%94%A8%E6%9D%BF%E5%AD%90/</link>
      <pubDate>Tue, 25 Mar 2025 00:00:00 +0000</pubDate>
      <guid>https://Frederick2313072.github.io/blog/2025-03-25-%E5%B8%B8%E7%94%A8%E6%9D%BF%E5%AD%90/</guid>
      <description>&lt;h2 id=&#34;栈&#34;&gt;栈&lt;/h2&gt;&#xA;&lt;p&gt;LIFO&lt;/p&gt;&#xA;&lt;h3 id=&#34;用数组模拟栈&#34;&gt;用数组模拟栈&lt;/h3&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;int st[N];//元素数量，栈顶下标&#xA;//压栈&#xA;st[++*st]=var1;&#xA;//取栈顶&#xA;int u =st[*st];&#xA;//弹栈，*st==0时不能继续弹出&#xA;if(*st) --*st;&#xA;//清空栈&#xA;*st =0 ;&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;stl中的栈&#34;&gt;STL中的栈&lt;/h3&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;//引入stack头文件，container默认使用stf::deque&#xA;template&amp;lt;&#xA;     class T,class Container = std:deque&amp;lt;T&amp;gt;&#xA;&amp;gt;class stack;&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;容器必须提供以下函数，如std::vector,std::deque和std::list&lt;/p&gt;</description>
    </item>
    <item>
      <title>NKUwiki爬虫说明</title>
      <link>https://Frederick2313072.github.io/blog/2025-03-23-nkuwiki%E7%88%AC%E8%99%AB%E8%AF%B4%E6%98%8E/</link>
      <pubDate>Sun, 23 Mar 2025 00:00:00 +0000</pubDate>
      <guid>https://Frederick2313072.github.io/blog/2025-03-23-nkuwiki%E7%88%AC%E8%99%AB%E8%AF%B4%E6%98%8E/</guid>
      <description>&lt;h2 id=&#34;小红书爬虫&#34;&gt;小红书爬虫&lt;/h2&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;python main.py --paltform xhs --lt qrcode --type search&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;修改了config下的配置文件，最好不要开并发，会发现爬了一段时间爬不了，修改keywords为实体清单，db_config为nkuwiki数据库配置，使用GET_IMAGES和GET_COMMENT，分两次爬取，一次导入数据库，一次导入本地以json格式，改START_DAY和END_DAY&lt;/p&gt;</description>
    </item>
    <item>
      <title>数据结构与算法</title>
      <link>https://Frederick2313072.github.io/blog/2025-03-21-%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/</link>
      <pubDate>Fri, 21 Mar 2025 00:00:00 +0000</pubDate>
      <guid>https://Frederick2313072.github.io/blog/2025-03-21-%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/</guid>
      <description>&lt;h2 id=&#34;数组&#34;&gt;数组&lt;/h2&gt;&#xA;&lt;h3 id=&#34;二分法&#34;&gt;二分法&lt;/h3&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;class Solution {&#xA;public:&#xA;    int search(vector&amp;lt;int&amp;gt;&amp;amp; nums, int target) {&#xA;        int left = 0 ;&#xA;        int right =nums.size()-1;&#xA;        while (left &amp;lt;= right ){&#xA;            int middle = left + ((right-left)/2);&#xA;        if (target &amp;lt; nums[middle]){&#xA;            &#xA;            right = middle-1;&#xA;        } else if (target &amp;gt; nums[middle]){&#xA;            left = middle+1;&#xA;        }else{&#xA;            return middle;&#xA;        }&#xA;        }&#xA;        return -1;&#xA;    }&#xA;};&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;翻转链表&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;class Solution {&#xA;&#xA;public:&#xA;&#xA;  ListNode* reverseList(ListNode* head) {&#xA;&#xA;    ListNode* temp;&#xA;&#xA;    ListNode* cur = head;&#xA;&#xA;    ListNode* pre = NULL;&#xA;&#xA;    while(cur){&#xA;&#xA;      temp=cur-&amp;gt;next;//暂时保存cur的下一个节点&#xA;&#xA;      cur-&amp;gt;next=pre;//反转&#xA;&#xA;      pre=cur;//更新pre和cur指针&#xA;&#xA;      cur=temp;&#xA;&#xA;     }&#xA;&#xA;     return pre;&#xA;&#xA;     &#xA;&#xA;  }&#xA;&#xA;};&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;环形链表&lt;/p&gt;</description>
    </item>
    <item>
      <title>ICS-PA笔记</title>
      <link>https://Frederick2313072.github.io/blog/2025-03-17-ics-pa%E7%AC%94%E8%AE%B0/</link>
      <pubDate>Mon, 17 Mar 2025 00:00:00 +0000</pubDate>
      <guid>https://Frederick2313072.github.io/blog/2025-03-17-ics-pa%E7%AC%94%E8%AE%B0/</guid>
      <description>&lt;p&gt;Unix is a user-friendly. It&amp;rsquo;s just selective about who its friends are.&lt;/p&gt;&#xA;&lt;h2 id=&#34;unix哲学&#34;&gt;Unix哲学&lt;/h2&gt;&#xA;&lt;p&gt;KISS：Keep it simple,stupid.&lt;/p&gt;&#xA;&lt;p&gt;Everything is a file and pipeline programs to work together.&lt;/p&gt;&#xA;&lt;p&gt;每个工具只做一件事情，但做到极致&lt;/p&gt;&#xA;&lt;p&gt;小工具统一文本输入输出，易于使用&lt;/p&gt;&#xA;&lt;p&gt;使用管道进行组合&lt;/p&gt;</description>
    </item>
    <item>
      <title>jyy操作系统</title>
      <link>https://Frederick2313072.github.io/blog/2025-03-16-jyy%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/</link>
      <pubDate>Sun, 16 Mar 2025 00:00:00 +0000</pubDate>
      <guid>https://Frederick2313072.github.io/blog/2025-03-16-jyy%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/</guid>
      <description>&lt;p&gt;由于引导区空间有限，只有512个字节，故打算把程序编译成com文件，然后让DOS执行&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;nasm pmtest1.asm -o pmtest1.com&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;一些挂载问题：&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;1、写入空白内容：&#xA;&#xA;   dd if=/dev/null of=pm.img bs=512 count=1 conv=notrunc&#xA;&#xA;2、使用 losetup 命令，将 data.img 作为 loop device 使用：&#xA;&#xA;   sudo losetup /dev/loop0 pm.img&#xA;&#xA;3、然后，格式化这个 loop device：&#xA;&#xA;   sudo mkfs.msdos /dev/loop0&#xA;&#xA;4、检查文件系统：&#xA;&#xA;   sudo fsck.msdos /dev/loop0&#xA;&#xA;5、删除 loop device：&#xA;&#xA;   sudo losetup -d /dev/loop0&#xA;&#xA;    这时候，pm.img 已经格式化完成，可以作为一个软盘镜像使用。用file查看，结果为：&#xA;&#xA;   pm.img: DOS floppy 1440k, x86 hard disk boot sector&#xA;&#xA;    再次输入&#xA;&#xA;   sudo mount -o loop pm.img /mnt/floppy&#xA;&#xA;6、挂载成功！！！&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;之后正常挂在就行&lt;/p&gt;</description>
    </item>
    <item>
      <title>ctfshow-pwn</title>
      <link>https://Frederick2313072.github.io/blog/2025-03-15-ctfshow-pwn/</link>
      <pubDate>Sat, 15 Mar 2025 00:00:00 +0000</pubDate>
      <guid>https://Frederick2313072.github.io/blog/2025-03-15-ctfshow-pwn/</guid>
      <description>&lt;p&gt;gcc hello.c -save-temps &amp;ndash;verbose&lt;/p&gt;&#xA;&lt;p&gt;-save-temps保存中间生成文件&lt;/p&gt;&#xA;&lt;p&gt;&amp;ndash;verbose查看详细工具流&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;预处理&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;gcc -E hello.c -o hello.i&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;编译&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;gcc -S hello.c -o hello.s&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;汇编&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;gcc -c hello.s -o hello.o&lt;/p&gt;&#xA;&lt;p&gt;重定向文件&lt;/p&gt;&#xA;&lt;p&gt;反汇编&lt;/p&gt;</description>
    </item>
    <item>
      <title>nssctf逆向题</title>
      <link>https://Frederick2313072.github.io/blog/2025-02-24-nssctf%E9%80%86%E5%90%91%E9%A2%98/</link>
      <pubDate>Mon, 24 Feb 2025 00:00:00 +0000</pubDate>
      <guid>https://Frederick2313072.github.io/blog/2025-02-24-nssctf%E9%80%86%E5%90%91%E9%A2%98/</guid>
      <description>&lt;h2 id=&#34;一些常见的逆向函数&#34;&gt;一些常见的逆向函数&lt;/h2&gt;&#xA;&lt;p&gt;index() find()找索引值&lt;/p&gt;&#xA;&lt;p&gt;.append(ord()) +=chr()字母数字转换&lt;/p&gt;&#xA;&lt;h2 id=&#34;简简单单的逻辑题&#34;&gt;简简单单的逻辑题&lt;/h2&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;ord 字符串转ascii码&#xA;chr ascii码转字符串&#xA;hex 十进制转十六进制&#xA;int(a，16) 十六进制转十进制&#xA;[起点,终点,步长] python切片&#xA;zfill(2) 为不满2个宽度的字符串前添加0直到宽度为2&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;easy-c&#34;&gt;easy C&lt;/h2&gt;&#xA;&lt;p&gt;直接逆完事&lt;/p&gt;</description>
    </item>
    <item>
      <title>汇编语言</title>
      <link>https://Frederick2313072.github.io/blog/2025-02-24-%E6%B1%87%E7%BC%96%E8%AF%AD%E8%A8%80/</link>
      <pubDate>Mon, 24 Feb 2025 00:00:00 +0000</pubDate>
      <guid>https://Frederick2313072.github.io/blog/2025-02-24-%E6%B1%87%E7%BC%96%E8%AF%AD%E8%A8%80/</guid>
      <description>&lt;p&gt;编辑：vim/edit&lt;/p&gt;&#xA;&lt;p&gt;编译：masm&lt;/p&gt;&#xA;&lt;p&gt;链接：link&lt;/p&gt;&#xA;&lt;p&gt;将内存2000:0，2000:1,2000:2,2000:3单元中的数据送入al,bl,cl,dl中&lt;/p&gt;</description>
    </item>
    <item>
      <title>逆向核心原理</title>
      <link>https://Frederick2313072.github.io/blog/2025-02-24-%E9%80%86%E5%90%91%E6%A0%B8%E5%BF%83%E5%8E%9F%E7%90%86/</link>
      <pubDate>Mon, 24 Feb 2025 00:00:00 +0000</pubDate>
      <guid>https://Frederick2313072.github.io/blog/2025-02-24-%E9%80%86%E5%90%91%E6%A0%B8%E5%BF%83%E5%8E%9F%E7%90%86/</guid>
      <description>&lt;p&gt;入口E8 00 CALL ~ Add ~&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;F7 步入&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;F8 步出&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;ctrl+F9 execute till return 跳出函数&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;ctrl+G 移动到指定位置&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;ctrl+F2 重新调试&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;F9 运行至断点处&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Alt + B  打开Breakpoints，列出断点&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;；添加注释&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;alt+M 内存模块&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;ctrl+E打开编辑窗口&lt;/p&gt;</description>
    </item>
    <item>
      <title>逆向小白</title>
      <link>https://Frederick2313072.github.io/blog/2025-02-24-%E9%80%86%E5%90%91%E5%B0%8F%E7%99%BD/</link>
      <pubDate>Mon, 24 Feb 2025 00:00:00 +0000</pubDate>
      <guid>https://Frederick2313072.github.io/blog/2025-02-24-%E9%80%86%E5%90%91%E5%B0%8F%E7%99%BD/</guid>
      <description>&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;# F系列【主要是调试状态的处理】&#xA;F2 添加/删除断点&#xA;F4 运行到光标所在位置&#xA;F5 反汇编&#xA;F7 单步步入&#xA;F8 单步跳过&#xA;F9 持续运行直到输入/断点/结束&#xA;shift系列【主要是调出对应的页面】&#xA;shift+F1 Local types&#xA;shift+F2 execute scripts【常用】&#xA;shift+F3 Functions&#xA;shift+F4 Names&#xA;shift+F5 Signatures&#xA;shift+F7 Segments&#xA;shift+F8 Segments registers&#xA;shift+F9 Structures&#xA;shift+F10 Enumerations&#xA;shift+F11 Type libraries&#xA;shift+F12 Strings【常用】&#xA;Shift+E 导出数据【常用】&#xA;&#xA;# 单字符系列【基本是数据处理转换相关】【这些都比较常用】&#xA;G 按地址查找&#xA;D 将字符串等元素转为数据&#xA;N 重命名（函数名、变量名等）&#xA;Y 修改变量类型等（比如int改char等等）&#xA;H decimal 数据的进制快速转换&#xA;A 将数据转变为字符串类型&#xA;C code（将数据转变为汇编代码，分为自动和强制执行）&#xA;U undefined（将字符串转变为原始数据）&#xA;X 交叉引用（反汇编页面）&#xA;P 选中位置识别为函数&#xA;&#xA;# Ctrl、Alt系列&#xA;Ctrl+F 搜索【常用】&#xA;Ctrl+X 交叉引用（汇编页面）【常用】&#xA;Alt+T 查找Text&#xA;Ctrl+T 查找下一个text&#xA;Alt+C Next Code&#xA;Ctrl+D Next Data&#xA;Ctrl+Z 撤销&#xA;Ctrl+Shift+Z 恢复&#xA;Alt+K 修改堆栈值&#xA;&#xA;# else&#xA;/ 添加注释 or 右键选择edit comment【常用】&#xA;\ hide cast，隐藏/显示一些变量类型注解&#xA;Ins 添加区块注释&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;通用寄存器&#34;&gt;通用寄存器&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;EAX：（针对操作数和结果数据的）累加器&lt;/li&gt;&#xA;&lt;li&gt;EBX：（DS段的数据指针）基址寄存器&lt;/li&gt;&#xA;&lt;li&gt;ECX：（字符串和循环操作的）计数器&lt;/li&gt;&#xA;&lt;li&gt;EDX：（I/O指针）数据寄存器&lt;/li&gt;&#xA;&lt;li&gt;ESI：（字符串操作源指针）源变址寄存器&lt;/li&gt;&#xA;&lt;li&gt;EDI：（字符串操作目标指针）目的变址寄存器&lt;/li&gt;&#xA;&lt;li&gt;EBP：（SS段中栈内数据指针）扩展基址指针寄存器[栈帧寄存器、栈底指针寄存器]&lt;/li&gt;&#xA;&lt;li&gt;ESP：（SS段中栈指针）栈指针寄存器[指向栈顶]&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;段寄存器&#34;&gt;段寄存器&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;CS：代码段寄存器&lt;/li&gt;&#xA;&lt;li&gt;SS：栈段寄存器&lt;/li&gt;&#xA;&lt;li&gt;DS：数据段寄存器&lt;/li&gt;&#xA;&lt;li&gt;FS：数据段寄存器&lt;/li&gt;&#xA;&lt;li&gt;ES：附加数据寄存器&lt;/li&gt;&#xA;&lt;li&gt;GS：数据段寄存器&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;程序状态与控制寄存器&#34;&gt;程序状态与控制寄存器&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;EFLAGS：标志寄存器，32个位元的01控制&lt;/li&gt;&#xA;&lt;li&gt;ZF(零标志器，运算结果为0时置1)&lt;/li&gt;&#xA;&lt;li&gt;CF(进位标志，运算结果向最高位以上进位时置1)&lt;/li&gt;&#xA;&lt;li&gt;OF(溢出标志)&lt;/li&gt;&#xA;&lt;li&gt;AF(辅助进位标志，运算结果在第3位的时候置1)&lt;/li&gt;&#xA;&lt;li&gt;SF(符号标志，有符号整型的符号位为1时置1)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;指令指针寄存器&#34;&gt;指令指针寄存器&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;EIP / RIP：保存CPU要执行的指令地址&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;常用指令&#34;&gt;常用指令&lt;/h3&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;操作码 目的操作数 源操作数&lt;/p&gt;</description>
    </item>
    <item>
      <title>数理统计</title>
      <link>https://Frederick2313072.github.io/blog/2025-02-24-%E6%95%B0%E7%90%86%E7%BB%9F%E8%AE%A1/</link>
      <pubDate>Mon, 24 Feb 2025 00:00:00 +0000</pubDate>
      <guid>https://Frederick2313072.github.io/blog/2025-02-24-%E6%95%B0%E7%90%86%E7%BB%9F%E8%AE%A1/</guid>
      <description>&lt;p&gt;总体：X&lt;/p&gt;&#xA;&lt;p&gt;个体：Xi&lt;/p&gt;&#xA;&lt;p&gt;样本：(X1，X2，&amp;hellip;&amp;hellip;.Xn)随机变量&lt;/p&gt;&#xA;&lt;p&gt;样本值：n个独立样本的一次实现(x1,x2,&amp;hellip;&amp;hellip;.xn)具体的数&lt;/p&gt;</description>
    </item>
    <item>
      <title>ctfshow通关</title>
      <link>https://Frederick2313072.github.io/blog/2025-02-14-ctfshow%E9%80%9A%E5%85%B3/</link>
      <pubDate>Fri, 14 Feb 2025 00:00:00 +0000</pubDate>
      <guid>https://Frederick2313072.github.io/blog/2025-02-14-ctfshow%E9%80%9A%E5%85%B3/</guid>
      <description>&lt;p&gt;web2：view-source是一种协议，早期基本上每个浏览器都支持这个协议。后来Microsoft考虑安全性，对于WindowsXP pack2以及更高版本以后IE就不再支持此协议。但是这个方法在FireFox和Chrome浏览器都还可以使用。 如果要在IE下查看源代码,只能使用查看中的&amp;quot;查看源代码&amp;quot;命令.以前的使用方法：在浏览器地址栏中输入 view-source: URL&lt;/p&gt;</description>
    </item>
    <item>
      <title>ctfhub-web</title>
      <link>https://Frederick2313072.github.io/blog/2025-02-08-ctfhub-web/</link>
      <pubDate>Sat, 08 Feb 2025 00:00:00 +0000</pubDate>
      <guid>https://Frederick2313072.github.io/blog/2025-02-08-ctfhub-web/</guid>
      <description>&lt;p&gt;HTTP请求：抓包，把GET换成CTFHUB&lt;/p&gt;&#xA;&lt;p&gt;302跳转：网页临时移动到新的位置，而浏览器的缓存没有更新，flag在index.php下而跳转到index.html打开burp suite抓包，发送请求&lt;/p&gt;</description>
    </item>
    <item>
      <title>Python渗透测试</title>
      <link>https://Frederick2313072.github.io/blog/2025-02-08-python%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/</link>
      <pubDate>Sat, 08 Feb 2025 00:00:00 +0000</pubDate>
      <guid>https://Frederick2313072.github.io/blog/2025-02-08-python%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/</guid>
      <description>&lt;p&gt;UDP TCP 客户端 服务器&lt;/p&gt;&#xA;&lt;h2 id=&#34;socket实例化&#34;&gt;socket实例化&lt;/h2&gt;&#xA;&lt;p&gt;socket(family,type,[protocal])协议族（默认AF_INET),,SOCK_STREAM(TCP)/SOCK_DGRAM(UDP)&lt;/p&gt;</description>
    </item>
    <item>
      <title>脚本小子</title>
      <link>https://Frederick2313072.github.io/blog/2025-01-20-%E8%84%9A%E6%9C%AC%E5%B0%8F%E5%AD%90/</link>
      <pubDate>Mon, 20 Jan 2025 00:00:00 +0000</pubDate>
      <guid>https://Frederick2313072.github.io/blog/2025-01-20-%E8%84%9A%E6%9C%AC%E5%B0%8F%E5%AD%90/</guid>
      <description>&lt;h2 id=&#34;dns侦察&#34;&gt;DNS侦察&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;DNSMAP DNS枚举并保存为txt&lt;/li&gt;&#xA;&lt;li&gt;DNSRecon A:IP MX:邮箱 NS:名称服务器 TXT:文本&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;​            IP地址反向查询&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;fierce 目标子域名和IP&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;主机枚举&#34;&gt;主机枚举&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;ATK6 枚举主机，发现新设备，发起拒绝服务攻击，利用已知漏洞；检测内网中存活的IPv6主机&lt;/p&gt;</description>
    </item>
    <item>
      <title>Web应用程序</title>
      <link>https://Frederick2313072.github.io/blog/2025-01-14-web%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F/</link>
      <pubDate>Tue, 14 Jan 2025 00:00:00 +0000</pubDate>
      <guid>https://Frederick2313072.github.io/blog/2025-01-14-web%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F/</guid>
      <description>&lt;h2 id=&#34;web应用程序&#34;&gt;Web应用程序&lt;/h2&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;缺陷&lt;/th&gt;&#xA;          &lt;th&gt;真实场景&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&#xA;&lt;a href=&#34;https://owasp.org/www-community/attacks/SQL_Injection&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;SQL 注入&lt;/a&gt;&lt;/td&gt;&#xA;          &lt;td&gt;获取 Active Directory 用户名并对 VPN 或电子邮件门户执行密码喷洒攻击。&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&#xA;&lt;a href=&#34;https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/07-Input_Validation_Testing/11.1-Testing_for_Local_File_Inclusion&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;文件包含&lt;/a&gt;&lt;/td&gt;&#xA;          &lt;td&gt;阅读源代码以查找隐藏的页面或目录，这些页面或目录公开了可用于获取远程代码执行的附加功能。&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&#xA;&lt;a href=&#34;https://owasp.org/www-community/vulnerabilities/Unrestricted_File_Upload&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;不受限制的文件上传&lt;/a&gt;&lt;/td&gt;&#xA;          &lt;td&gt;允许用户上传个人资料图片的 Web 应用程序，允许上传任何类型的文件（不仅仅是图片）。可以利用此功能通过上传恶意代码来完全控制 Web 应用程序服务器。&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&#xA;&lt;a href=&#34;https://cheatsheetseries.owasp.org/cheatsheets/Insecure_Direct_Object_Reference_Prevention_Cheat_Sheet.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;不安全的直接对象引用（IDOR）&lt;/a&gt;&lt;/td&gt;&#xA;          &lt;td&gt;当与访问控制失效等缺陷相结合时，这通常可用于访问其他用户的文件或功能。例如，在浏览到 /user/701/edit-profile 等页面时编辑您的用户个人资料。如果我们可以将 更改&lt;code&gt;701&lt;/code&gt;为&lt;code&gt;702&lt;/code&gt;，我们就可以编辑其他用户的个人资料！&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&#xA;&lt;a href=&#34;https://owasp.org/www-project-top-ten/2017/A5_2017-Broken_Access_Control&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;访问控制失效&lt;/a&gt;&lt;/td&gt;&#xA;          &lt;td&gt;另一个示例是允许用户注册新帐户的应用程序。如果帐户注册功能设计不佳，用户可能会在注册时执行权限提升。考虑&lt;code&gt;POST&lt;/code&gt;注册新用户时的请求，该请求提交数据&lt;code&gt;username=bjones&amp;amp;password=Welcome1&amp;amp;email=bjones@inlanefreight.local&amp;amp;roleid=3&lt;/code&gt;。如果我们可以操纵&lt;code&gt;roleid&lt;/code&gt;参数并将其更改为&lt;code&gt;0&lt;/code&gt;或会怎样&lt;code&gt;1&lt;/code&gt;？我们已经看到了这种情况的真实应用程序，并且可以快速注册管理员用户并访问 Web 应用程序的许多非预期功能。&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h2 id=&#34;web程序布局&#34;&gt;Web程序布局&lt;/h2&gt;&#xA;&lt;p&gt;层：&lt;/p&gt;</description>
    </item>
    <item>
      <title>nmap基础</title>
      <link>https://Frederick2313072.github.io/blog/2025-01-12-nmap%E5%9F%BA%E7%A1%80/</link>
      <pubDate>Sun, 12 Jan 2025 00:00:00 +0000</pubDate>
      <guid>https://Frederick2313072.github.io/blog/2025-01-12-nmap%E5%9F%BA%E7%A1%80/</guid>
      <description>&lt;ul&gt;&#xA;&lt;li&gt;TCP扫描，默认常用&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#93a1a1;background-color:#002b36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell-session&#34; data-lang=&#34;shell-session&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; sudo nmap -sS localhost&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;发现主机&#34;&gt;发现主机&lt;/h2&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;sudo nmap 10.129.2.0/24 -sn -oA tnet | grep for | cut -d&amp;#34; &amp;#34; -f5&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;&lt;strong&gt;扫描选项&lt;/strong&gt;&lt;/th&gt;&#xA;          &lt;th&gt;&lt;strong&gt;描述&lt;/strong&gt;&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;10.129.2.0/24&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;目标网络范围。&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;-sn&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;禁用端口扫描。&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;-oA tnet&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;以名称“tnet”开头的所有格式存储结果。&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;p&gt;&lt;code&gt;Firewall and IDS Evasion&lt;/code&gt;此扫描方法仅在主机的防火墙允许的情况下才有效&lt;/p&gt;</description>
    </item>
    <item>
      <title>sqli-labs通关</title>
      <link>https://Frederick2313072.github.io/blog/2025-01-05-sqli-labs%E9%80%9A%E5%85%B3/</link>
      <pubDate>Sun, 05 Jan 2025 00:00:00 +0000</pubDate>
      <guid>https://Frederick2313072.github.io/blog/2025-01-05-sqli-labs%E9%80%9A%E5%85%B3/</guid>
      <description>&lt;ul&gt;&#xA;&lt;li&gt;工具：phpstudy，Hackbar&lt;/li&gt;&#xA;&lt;li&gt;搭建靶场：sqli-labs(从Github上下载官方的，有些民间的可能会有木马)&lt;/li&gt;&#xA;&lt;li&gt;数据库：mysql5.7&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h1 id=&#34;联合注入&#34;&gt;联合注入&lt;/h1&gt;&#xA;&lt;p&gt;需要页面有回显位&lt;/p&gt;</description>
    </item>
    <item>
      <title>概率论模型及小结</title>
      <link>https://Frederick2313072.github.io/blog/2024-12-27-%E6%A6%82%E7%8E%87%E8%AE%BA%E6%A8%A1%E5%9E%8B%E5%8F%8A%E5%B0%8F%E7%BB%93/</link>
      <pubDate>Fri, 27 Dec 2024 00:00:00 +0000</pubDate>
      <guid>https://Frederick2313072.github.io/blog/2024-12-27-%E6%A6%82%E7%8E%87%E8%AE%BA%E6%A8%A1%E5%9E%8B%E5%8F%8A%E5%B0%8F%E7%BB%93/</guid>
      <description>&lt;p&gt;记号&lt;/p&gt;&#xA;&lt;p&gt;如果$n_1+n_2+\cdots+n_r=n$, 则定义$\binom n{n_1,n_2,\ldots,n_r}$为&#xA;&lt;/p&gt;&#xA;$$\binom n{n_1,n_2,\cdots,n_r}=\frac{n!}{n_1!n_2!\cdots n_r!}$$&lt;p&gt;因此，$\binom n{n_1,n_2,\ldots,n_r}$表示把 $n$ 个 不 同 的 元 素 分 成 大 小 分 别 为 $n_1, n_2, \ldots , n_r$的$r$个&lt;/p&gt;</description>
    </item>
    <item>
      <title>数据库系统概论第二章习题答案</title>
      <link>https://Frederick2313072.github.io/blog/2024-12-09-%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F%E6%A6%82%E8%AE%BA%E7%AC%AC%E4%BA%8C%E7%AB%A0%E4%B9%A0%E9%A2%98%E7%AD%94%E6%A1%88/</link>
      <pubDate>Mon, 09 Dec 2024 00:00:00 +0000</pubDate>
      <guid>https://Frederick2313072.github.io/blog/2024-12-09-%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F%E6%A6%82%E8%AE%BA%E7%AC%AC%E4%BA%8C%E7%AB%A0%E4%B9%A0%E9%A2%98%E7%AD%94%E6%A1%88/</guid>
      <description>&lt;h1 id=&#34;第二章-关系数据库&#34;&gt;第二章 关系数据库&lt;/h1&gt;&#xA;&lt;p&gt;1.试述关系模型的三个组成部分&lt;/p&gt;&#xA;&lt;p&gt;关系数据结构：只包含单一的数据结构——关系，由三种类型：基本关系（基本表），查询表和视图表&lt;/p&gt;&#xA;&lt;p&gt;关系操作集合：查询（选择，投影，并，差，笛卡尔积），插入，删除，修改&lt;/p&gt;</description>
    </item>
    <item>
      <title>数据库系统概论第一章习题答案</title>
      <link>https://Frederick2313072.github.io/blog/2024-12-09-%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F%E6%A6%82%E8%AE%BA%E7%AC%AC%E4%B8%80%E7%AB%A0%E4%B9%A0%E9%A2%98%E7%AD%94%E6%A1%88/</link>
      <pubDate>Mon, 09 Dec 2024 00:00:00 +0000</pubDate>
      <guid>https://Frederick2313072.github.io/blog/2024-12-09-%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F%E6%A6%82%E8%AE%BA%E7%AC%AC%E4%B8%80%E7%AB%A0%E4%B9%A0%E9%A2%98%E7%AD%94%E6%A1%88/</guid>
      <description>&lt;h1 id=&#34;第一章-绪论&#34;&gt;第一章 绪论&lt;/h1&gt;&#xA;&lt;p&gt;1.试述数据，数据库，数据库管理系统，数据库系统的概念&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;数据：描述事物的符号&lt;/li&gt;&#xA;&lt;li&gt;数据库DB：长期储存在计算机内，有组织的，可共享的大量数据的集合。数据库中的数据按一定的数据模型组织，描述和储存，具有较小的冗余度，较高的数据独立性和易扩展性，并可为各种用户共享&lt;/li&gt;&#xA;&lt;li&gt;数据库管理系统DBMS：系统软件，有以下功能：&#xA;&lt;ul&gt;&#xA;&lt;li&gt;数据定义&lt;/li&gt;&#xA;&lt;li&gt;数据组织，存储和管理&lt;/li&gt;&#xA;&lt;li&gt;数据操纵功能&lt;/li&gt;&#xA;&lt;li&gt;数据库的事务管理和运行管理&lt;/li&gt;&#xA;&lt;li&gt;数据库建立和维护&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;数据库系统DBS：由DB，DBMS,DA组成的存储，管理，处理和维护数据的系统&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;2.使用数据库有什么好处？&lt;/p&gt;</description>
    </item>
    <item>
      <title>SQL必知必会例子</title>
      <link>https://Frederick2313072.github.io/blog/2024-12-05-sql%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A%E4%BE%8B%E5%AD%90/</link>
      <pubDate>Thu, 05 Dec 2024 00:00:00 +0000</pubDate>
      <guid>https://Frederick2313072.github.io/blog/2024-12-05-sql%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A%E4%BE%8B%E5%AD%90/</guid>
      <description>&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#93a1a1;background-color:#002b36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#719e07&#34;&gt;SELECT&lt;/span&gt; RTRIM(vend_name) &lt;span style=&#34;color:#719e07&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#2aa198&#34;&gt;&amp;#39;(&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#719e07&#34;&gt;+&lt;/span&gt;   &lt;span style=&#34;color:#586e75&#34;&gt;--右边取消空格&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#586e75&#34;&gt;&lt;/span&gt;RTRIM(vend_country) &lt;span style=&#34;color:#719e07&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#2aa198&#34;&gt;&amp;#39;)&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#719e07&#34;&gt;AS&lt;/span&gt; vend_title&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#719e07&#34;&gt;From&lt;/span&gt; Vendors&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#719e07&#34;&gt;ORDER&lt;/span&gt; &lt;span style=&#34;color:#719e07&#34;&gt;BY&lt;/span&gt; vend_name;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#719e07&#34;&gt;SELECT&lt;/span&gt; prod_id,quantity,item_price,quantity&lt;span style=&#34;color:#719e07&#34;&gt;*&lt;/span&gt;item_price&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#719e07&#34;&gt;AS&lt;/span&gt; expanded_price&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#719e07&#34;&gt;FROM&lt;/span&gt; OrderItems;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#719e07&#34;&gt;SELECT&lt;/span&gt; vend_name,&lt;span style=&#34;color:#719e07&#34;&gt;UPPER&lt;/span&gt;(vend_name) &lt;span style=&#34;color:#586e75&#34;&gt;--大写&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#586e75&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#719e07&#34;&gt;AS&lt;/span&gt; vend_name_upcase&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#719e07&#34;&gt;FROM&lt;/span&gt; Vendors&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#719e07&#34;&gt;ORDER&lt;/span&gt; &lt;span style=&#34;color:#719e07&#34;&gt;BY&lt;/span&gt; vend_name;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#719e07&#34;&gt;SELECT&lt;/span&gt; cust_name,cust_contact&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#719e07&#34;&gt;FROM&lt;/span&gt; Customers&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#719e07&#34;&gt;WHERE&lt;/span&gt; SOUNDEX(cust_contact) &lt;span style=&#34;color:#719e07&#34;&gt;=&lt;/span&gt; SOUNDEX(&lt;span style=&#34;color:#2aa198&#34;&gt;&amp;#39;Michael Green&amp;#39;&lt;/span&gt;); &lt;span style=&#34;color:#586e75&#34;&gt;--近似发音&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#586e75&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#719e07&#34;&gt;SELECT&lt;/span&gt; order_num&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#719e07&#34;&gt;FROM&lt;/span&gt; Orders&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#719e07&#34;&gt;WHERE&lt;/span&gt; DATEPART(yy,order_date) &lt;span style=&#34;color:#719e07&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#2aa198&#34;&gt;2020&lt;/span&gt;;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#719e07&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#719e07&#34;&gt;AVG&lt;/span&gt;(prod_price) &lt;span style=&#34;color:#719e07&#34;&gt;AS&lt;/span&gt; avg_price &lt;span style=&#34;color:#586e75&#34;&gt;--取平均值&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#586e75&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#719e07&#34;&gt;FROM&lt;/span&gt; Products&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#719e07&#34;&gt;WHERE&lt;/span&gt; vend_id &lt;span style=&#34;color:#719e07&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#2aa198&#34;&gt;&amp;#39;DLL01&amp;#39;&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#719e07&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#719e07&#34;&gt;COUNT&lt;/span&gt;(&lt;span style=&#34;color:#719e07&#34;&gt;*&lt;/span&gt;)&lt;span style=&#34;color:#719e07&#34;&gt;AS&lt;/span&gt; num_cust &lt;span style=&#34;color:#586e75&#34;&gt;--对所有行计数&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#586e75&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#719e07&#34;&gt;FROM&lt;/span&gt; Customers;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#719e07&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#719e07&#34;&gt;MAX&lt;/span&gt;(prod_price) &lt;span style=&#34;color:#719e07&#34;&gt;AS&lt;/span&gt; max_price&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#719e07&#34;&gt;FROM&lt;/span&gt; Products;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#719e07&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#719e07&#34;&gt;SUM&lt;/span&gt;(quantity&lt;span style=&#34;color:#719e07&#34;&gt;*&lt;/span&gt;item_price) &lt;span style=&#34;color:#719e07&#34;&gt;AS&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;items_ordered&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#719e07&#34;&gt;FROM&lt;/span&gt; OrderItems&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#719e07&#34;&gt;WHERE&lt;/span&gt; order_num &lt;span style=&#34;color:#719e07&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#2aa198&#34;&gt;20005&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#719e07&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#719e07&#34;&gt;AVG&lt;/span&gt;(&lt;span style=&#34;color:#719e07&#34;&gt;DISTINCT&lt;/span&gt; prod_price) &lt;span style=&#34;color:#719e07&#34;&gt;AS&lt;/span&gt; avg_price&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#719e07&#34;&gt;FROM&lt;/span&gt; Products&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#719e07&#34;&gt;Where&lt;/span&gt; vend_id &lt;span style=&#34;color:#719e07&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#2aa198&#34;&gt;&amp;#39;DLL01&amp;#39;&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#719e07&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#719e07&#34;&gt;COUNT&lt;/span&gt;(&lt;span style=&#34;color:#719e07&#34;&gt;*&lt;/span&gt;) &lt;span style=&#34;color:#719e07&#34;&gt;AS&lt;/span&gt; num_items,&lt;span style=&#34;color:#719e07&#34;&gt;MIN&lt;/span&gt;(prod_price) &lt;span style=&#34;color:#719e07&#34;&gt;AS&lt;/span&gt; price_min,&lt;span style=&#34;color:#719e07&#34;&gt;MAX&lt;/span&gt;(prod_price) &lt;span style=&#34;color:#719e07&#34;&gt;AS&lt;/span&gt; proce_max,&lt;span style=&#34;color:#719e07&#34;&gt;AVG&lt;/span&gt;(prod_price) &lt;span style=&#34;color:#719e07&#34;&gt;AS&lt;/span&gt; price_avg &lt;span style=&#34;color:#586e75&#34;&gt;--组合聚集函数&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#586e75&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#719e07&#34;&gt;FROM&lt;/span&gt; products;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#719e07&#34;&gt;SELECT&lt;/span&gt; vend_id,&lt;span style=&#34;color:#719e07&#34;&gt;COUNT&lt;/span&gt;(&lt;span style=&#34;color:#719e07&#34;&gt;*&lt;/span&gt;) &lt;span style=&#34;color:#719e07&#34;&gt;AS&lt;/span&gt; num_prods&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#719e07&#34;&gt;FROM&lt;/span&gt; Products&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#719e07&#34;&gt;Group&lt;/span&gt; &lt;span style=&#34;color:#719e07&#34;&gt;BY&lt;/span&gt; vend_id&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#719e07&#34;&gt;HAVING&lt;/span&gt; &lt;span style=&#34;color:#719e07&#34;&gt;COUNT&lt;/span&gt;(&lt;span style=&#34;color:#719e07&#34;&gt;*&lt;/span&gt;) &lt;span style=&#34;color:#719e07&#34;&gt;&amp;gt;=&lt;/span&gt; &lt;span style=&#34;color:#2aa198&#34;&gt;2&lt;/span&gt;;&lt;span style=&#34;color:#586e75&#34;&gt;--过滤分组，group by 和 having结合&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#586e75&#34;&gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#719e07&#34;&gt;SELECT&lt;/span&gt; order_num,&lt;span style=&#34;color:#719e07&#34;&gt;COUNT&lt;/span&gt;(&lt;span style=&#34;color:#719e07&#34;&gt;*&lt;/span&gt;)&lt;span style=&#34;color:#719e07&#34;&gt;AS&lt;/span&gt; items&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#719e07&#34;&gt;FROM&lt;/span&gt; OrderItems&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#719e07&#34;&gt;Group&lt;/span&gt; &lt;span style=&#34;color:#719e07&#34;&gt;BY&lt;/span&gt; order_num&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#719e07&#34;&gt;HAVING&lt;/span&gt; &lt;span style=&#34;color:#719e07&#34;&gt;COUNT&lt;/span&gt;(&lt;span style=&#34;color:#719e07&#34;&gt;*&lt;/span&gt;) &lt;span style=&#34;color:#719e07&#34;&gt;&amp;gt;=&lt;/span&gt; &lt;span style=&#34;color:#2aa198&#34;&gt;3&lt;/span&gt;&lt;span style=&#34;color:#586e75&#34;&gt;--检索包含三个或更多物品的订单号和订购物品的数目&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#586e75&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#719e07&#34;&gt;ORDER&lt;/span&gt; &lt;span style=&#34;color:#719e07&#34;&gt;BY&lt;/span&gt; items,order_num;&lt;span style=&#34;color:#586e75&#34;&gt;--按订购物品的数目排序输出，having在group by前，order by后&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#586e75&#34;&gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#719e07&#34;&gt;SELECT&lt;/span&gt; cust_id&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#719e07&#34;&gt;FROM&lt;/span&gt; OrderItems&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#719e07&#34;&gt;WHERE&lt;/span&gt; prod_id &lt;span style=&#34;color:#719e07&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#2aa198&#34;&gt;&amp;#39;RGAN01&amp;#39;&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#719e07&#34;&gt;SELECT&lt;/span&gt; cust_id&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#719e07&#34;&gt;FROM&lt;/span&gt; Orders&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#719e07&#34;&gt;WHERE&lt;/span&gt; order_num &lt;span style=&#34;color:#719e07&#34;&gt;IN&lt;/span&gt; (&lt;span style=&#34;color:#2aa198&#34;&gt;20007&lt;/span&gt;,&lt;span style=&#34;color:#2aa198&#34;&gt;20008&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#719e07&#34;&gt;SELECT&lt;/span&gt; cust_id&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#719e07&#34;&gt;FROM&lt;/span&gt; Orders&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#719e07&#34;&gt;WHERE&lt;/span&gt; order_num &lt;span style=&#34;color:#719e07&#34;&gt;IN&lt;/span&gt; (&lt;span style=&#34;color:#719e07&#34;&gt;SELECT&lt;/span&gt; cust_id&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#719e07&#34;&gt;FROM&lt;/span&gt; Orders&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#719e07&#34;&gt;WHERE&lt;/span&gt; order_num &lt;span style=&#34;color:#719e07&#34;&gt;IN&lt;/span&gt; (&lt;span style=&#34;color:#2aa198&#34;&gt;20007&lt;/span&gt;,&lt;span style=&#34;color:#2aa198&#34;&gt;20008&lt;/span&gt;));&lt;span style=&#34;color:#586e75&#34;&gt;--建立以上的子查询，由内向外&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#586e75&#34;&gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#719e07&#34;&gt;SELECT&lt;/span&gt; cust_name,cust_state,(&lt;span style=&#34;color:#719e07&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#719e07&#34;&gt;COUNT&lt;/span&gt;(&lt;span style=&#34;color:#719e07&#34;&gt;*&lt;/span&gt;)&lt;span style=&#34;color:#719e07&#34;&gt;FROM&lt;/span&gt; Orders &lt;span style=&#34;color:#719e07&#34;&gt;WHERE&lt;/span&gt; Orders.cust_id&lt;span style=&#34;color:#719e07&#34;&gt;=&lt;/span&gt;Customers.cust_id) &lt;span style=&#34;color:#719e07&#34;&gt;AS&lt;/span&gt; orders &lt;span style=&#34;color:#586e75&#34;&gt;--子查询对检索出的每个顾客执行一次，用句点避免混淆列名&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#586e75&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#719e07&#34;&gt;FROM&lt;/span&gt; Customers&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#719e07&#34;&gt;ORDER&lt;/span&gt; &lt;span style=&#34;color:#719e07&#34;&gt;BY&lt;/span&gt; cust_name;&lt;span style=&#34;color:#586e75&#34;&gt;--对于检索出的每个顾客，统计其在Orders表中的订单数目&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#586e75&#34;&gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#719e07&#34;&gt;SELECT&lt;/span&gt; vend_name,prod_name,prod_price&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#719e07&#34;&gt;FROM&lt;/span&gt; Vendors,Products&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#719e07&#34;&gt;WHERE&lt;/span&gt; Vendors.vend_id &lt;span style=&#34;color:#719e07&#34;&gt;=&lt;/span&gt; Products.vend_id;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#719e07&#34;&gt;BEGIN&lt;/span&gt; &lt;span style=&#34;color:#719e07&#34;&gt;TRANSACTION&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#719e07&#34;&gt;DELETE&lt;/span&gt; OrderItems &lt;span style=&#34;color:#719e07&#34;&gt;WHERE&lt;/span&gt; order_num &lt;span style=&#34;color:#719e07&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#2aa198&#34;&gt;12345&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;SAVE &lt;span style=&#34;color:#719e07&#34;&gt;TRANSACTION&lt;/span&gt; delete1;&lt;span style=&#34;color:#586e75&#34;&gt;--使用保留点delete1，保留点越多越好，额能进行灵活的回退&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#586e75&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#719e07&#34;&gt;DELETE&lt;/span&gt; Orders&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#719e07&#34;&gt;WHERE&lt;/span&gt; order_num &lt;span style=&#34;color:#719e07&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#2aa198&#34;&gt;12345&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#719e07&#34;&gt;ROLLBACK&lt;/span&gt; &lt;span style=&#34;color:#719e07&#34;&gt;TRANSACTION&lt;/span&gt; delete1;&lt;span style=&#34;color:#586e75&#34;&gt;--回退到保留点delete1&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#586e75&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#719e07&#34;&gt;COMMIT&lt;/span&gt; &lt;span style=&#34;color:#719e07&#34;&gt;TRANSACTION&lt;/span&gt;&lt;span style=&#34;color:#586e75&#34;&gt;--控制事物处理，最后的commit仅在中间过程不出错的情况下写出更改&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#586e75&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#719e07&#34;&gt;BEGIN&lt;/span&gt; &lt;span style=&#34;color:#719e07&#34;&gt;TRANSACTION&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#719e07&#34;&gt;DELETE&lt;/span&gt; OrderItems &lt;span style=&#34;color:#719e07&#34;&gt;WHERE&lt;/span&gt; order_num &lt;span style=&#34;color:#719e07&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#2aa198&#34;&gt;12345&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;SAVE &lt;span style=&#34;color:#719e07&#34;&gt;TRANSACTION&lt;/span&gt; delete1;&lt;span style=&#34;color:#586e75&#34;&gt;--使用保留点delete1，保留点越多越好，额能进行灵活的回退&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#586e75&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#719e07&#34;&gt;DELETE&lt;/span&gt; Orders&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#719e07&#34;&gt;WHERE&lt;/span&gt; order_num &lt;span style=&#34;color:#719e07&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#2aa198&#34;&gt;12345&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#719e07&#34;&gt;ROLLBACK&lt;/span&gt; &lt;span style=&#34;color:#719e07&#34;&gt;TRANSACTION&lt;/span&gt; delete1;&lt;span style=&#34;color:#586e75&#34;&gt;--回退到保留点delete1&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#586e75&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#719e07&#34;&gt;COMMIT&lt;/span&gt; &lt;span style=&#34;color:#719e07&#34;&gt;TRANSACTION&lt;/span&gt;&lt;span style=&#34;color:#586e75&#34;&gt;--控制事物处理，最后的commit仅在中间过程不出错的情况下写出更改&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#586e75&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#719e07&#34;&gt;DECLARE&lt;/span&gt; &lt;span style=&#34;color:#719e07&#34;&gt;CURSOR&lt;/span&gt; CustCursor&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#719e07&#34;&gt;IS&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#719e07&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#719e07&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#719e07&#34;&gt;FROM&lt;/span&gt; Customers&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#719e07&#34;&gt;WHERE&lt;/span&gt; cust_email &lt;span style=&#34;color:#719e07&#34;&gt;IS&lt;/span&gt; &lt;span style=&#34;color:#719e07&#34;&gt;NULL&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#719e07&#34;&gt;ALTER&lt;/span&gt; &lt;span style=&#34;color:#719e07&#34;&gt;TABLE&lt;/span&gt; Vendors&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#719e07&#34;&gt;ADD&lt;/span&gt; &lt;span style=&#34;color:#719e07&#34;&gt;CONSTRAINT&lt;/span&gt; &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#719e07&#34;&gt;PRIMARY&lt;/span&gt; &lt;span style=&#34;color:#719e07&#34;&gt;KEY&lt;/span&gt;(vend_id)&lt;span style=&#34;color:#586e75&#34;&gt;--设置主键，DBMS默认主键基本不修改或更新，不能重用&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#586e75&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#719e07&#34;&gt;ALTER&lt;/span&gt; &lt;span style=&#34;color:#719e07&#34;&gt;TABLE&lt;/span&gt; Orders&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#719e07&#34;&gt;ADD&lt;/span&gt; &lt;span style=&#34;color:#719e07&#34;&gt;CONSTRAINT&lt;/span&gt; &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#719e07&#34;&gt;FOREIGN&lt;/span&gt; &lt;span style=&#34;color:#719e07&#34;&gt;KEY&lt;/span&gt; (cust_id) &lt;span style=&#34;color:#719e07&#34;&gt;REFERENCES&lt;/span&gt; Customers(cust_id);&lt;span style=&#34;color:#586e75&#34;&gt;--将此表中的cust_id设置为Customers的主键，即外键。外键有助防止意外删除，若删除，级联删除&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#586e75&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#719e07&#34;&gt;CREATE&lt;/span&gt; &lt;span style=&#34;color:#719e07&#34;&gt;INDEX&lt;/span&gt; prod_name_ind&lt;span style=&#34;color:#586e75&#34;&gt;--索引名&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#586e75&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#719e07&#34;&gt;ON&lt;/span&gt; Products(prod_name)&lt;span style=&#34;color:#586e75&#34;&gt;--被索引的表，列&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#586e75&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#719e07&#34;&gt;CREATE&lt;/span&gt; &lt;span style=&#34;color:#719e07&#34;&gt;TRIGGER&lt;/span&gt; customer_state&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#719e07&#34;&gt;ON&lt;/span&gt; Customers&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#719e07&#34;&gt;FOR&lt;/span&gt; &lt;span style=&#34;color:#719e07&#34;&gt;INSERT&lt;/span&gt;,&lt;span style=&#34;color:#719e07&#34;&gt;UPDATE&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#719e07&#34;&gt;AS&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#719e07&#34;&gt;UPDATE&lt;/span&gt; Customers&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#719e07&#34;&gt;SET&lt;/span&gt; cust_state&lt;span style=&#34;color:#719e07&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#719e07&#34;&gt;Upper&lt;/span&gt;(cust_state)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#719e07&#34;&gt;WHERE&lt;/span&gt; Customers.cust_id &lt;span style=&#34;color:#719e07&#34;&gt;=&lt;/span&gt; inserted.cust_id;&lt;span style=&#34;color:#586e75&#34;&gt;--创建一个触发器，对所有INSERT和UPDATE操作，将cust_state转为大写&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Plan after this semester</title>
      <link>https://Frederick2313072.github.io/blog/2024-12-02-plan-after-this-semester/</link>
      <pubDate>Mon, 02 Dec 2024 00:00:00 +0000</pubDate>
      <guid>https://Frederick2313072.github.io/blog/2024-12-02-plan-after-this-semester/</guid>
      <description>&lt;h2 id=&#34;python&#34;&gt;Python&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;爬虫&lt;/li&gt;&#xA;&lt;li&gt;建模&lt;/li&gt;&#xA;&lt;li&gt;数据挖掘（统计方向的待定）&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;js&#34;&gt;JS&lt;/h2&gt;&#xA;&lt;p&gt;做个代办事项列表（我所能想到JS对我的唯一用处就是网页加个响应什么的）&lt;/p&gt;&#xA;&lt;h2 id=&#34;重新巩固c语言&#34;&gt;重新巩固C语言&lt;/h2&gt;&#xA;&lt;h2 id=&#34;unity&#34;&gt;Unity&lt;/h2&gt;&#xA;&lt;p&gt;学习C#语言，可能大创写个游戏，或者跟之前联系好的设计系朋友写着玩玩&lt;/p&gt;</description>
    </item>
    <item>
      <title>Summary in November</title>
      <link>https://Frederick2313072.github.io/blog/2024-12-02-summary-in-november/</link>
      <pubDate>Mon, 02 Dec 2024 00:00:00 +0000</pubDate>
      <guid>https://Frederick2313072.github.io/blog/2024-12-02-summary-in-november/</guid>
      <description>&lt;h2 id=&#34;python&#34;&gt;Python&lt;/h2&gt;&#xA;&lt;p&gt;基础语法到面向对象编程，小项目只用过pygame写了一个窗口射击游戏，图灵系列那本python编程学的很流畅，很快能上手项目&lt;/p&gt;&#xA;&lt;h2 id=&#34;javascript&#34;&gt;Javascript&lt;/h2&gt;&#xA;&lt;p&gt;到现在只学了点皮毛，只会做动态内容更新，也只是自己做html网页时乱加上去的&lt;/p&gt;</description>
    </item>
    <item>
      <title>Archives</title>
      <link>https://Frederick2313072.github.io/archives/</link>
      <pubDate>Tue, 28 May 2019 00:00:00 +0000</pubDate>
      <guid>https://Frederick2313072.github.io/archives/</guid>
      <description></description>
    </item>
    <item>
      <title></title>
      <link>https://Frederick2313072.github.io/blog/1-01-01-/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://Frederick2313072.github.io/blog/1-01-01-/</guid>
      <description>&lt;h1 id=&#34;第三章-sql&#34;&gt;第三章 SQL&lt;/h1&gt;&#xA;&lt;p&gt;1.试述SQL的特点&lt;/p&gt;&#xA;&lt;p&gt;综合统一，高度非过程化，面向集合的操作方式，以同一种语法结构提供多种使用方式&lt;/p&gt;&#xA;&lt;p&gt;2.说明在DROP TABLE时，RESTRICT和CASCADE的区别&lt;/p&gt;</description>
    </item>
    <item>
      <title>About</title>
      <link>https://Frederick2313072.github.io/about/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://Frederick2313072.github.io/about/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;&lt;em&gt;&lt;strong&gt;我们现在讲起往事的时候，总是以“过去了几个月，过去了一年两年，一段时间”这种轻描淡写的手法一笔带过。&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;em&gt;&lt;strong&gt;可是对于当事人来说，恰恰是不知道这种情况究竟要持续多久，才会迷茫、失措，甚至痛苦，当事人是没有全知视角的，这才是痛苦的根源&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Links</title>
      <link>https://Frederick2313072.github.io/links/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://Frederick2313072.github.io/links/</guid>
      <description></description>
    </item>
  </channel>
</rss>
